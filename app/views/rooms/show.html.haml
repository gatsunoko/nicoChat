- content_for :header do
  .link
    %a{href: "javascript:history.back();", class: 'back_link', id: 'back_button'} <
  .title
    %h3
      = @room.title
  = render 'rooms/share', contents_id: @room.id, contents_name: @room.title, share_url: ENV['ROOM_SHARE_URL']
</div>/
.room_show
  %ul.messages#messages
    - unless @all
      .more_link_area
        = link_to '過去ログ全部みる', room_path(@room, all: true)
    - @messages.each do |message|
      = render 'message', message: message
  .input_area
    .upper
      %input{'data-behavior' => "room_speaker", tyle: 'text', id: 'username', placeholder: '名無しさん'}
    .lower
      %textarea{'data-behavior' => "room_speaker", id: 'textarea'}
      %button{class: 'btn', id: 'send_button'}
        送信
  :css
    .contants {
      padding-top: 42px;
    }
  - unless @all
    :javascript
      (function() {
        //scrollTopはブラウザによって扱える要素が違う
        //safari用
        $('body').delay(100).animate({
          scrollTop: $(document).height()
        },500);
        //chrome用
        $('html').delay(100).animate({
          scrollTop: $(document).height()
        },500);
  :javascript
    (function() {
      App.room1 = App.cable.subscriptions.create({
        channel: 'RoomChannel',
        room: #{@room.id}  // channelに送られた後、params['room']で取り出せる
      }, {
        connected: function() {
        },
        disconnected: function() {
        },
        received: function(data) {
          //受信したチャットを追加する前にスクロールバー位置取得
          let scrollPositon = getScrollBottom()
          //added
          $('#messages').append(data['message']);
          //スクロールバーが一番下から30px未満ならチャット受信時自動スクロール
          if (scrollPositon < 30) {
            //scrollTopはブラウザによって扱える要素が違う
            //safari用
            $('body').delay(100).animate({
              scrollTop: $(document).height()
            },500);
            //chrome用
            $('html').delay(100).animate({
              scrollTop: $(document).height()
            },500);
          }
          return
        },
        speak: function(message, username) {
          return this.perform('speak', {
            message: message,
            username: username
          });
        }
      });

      //送信
      //送信ボタンクリック
      $('#send_button').click(function() {
        App.room1.speak($('#textarea').val(), $('#username').val());
        $('#textarea').val('');
      });
      //Shift + Enter
      $('#textarea').keyup(function(e) {
        $(document).scrollTop($('#messages').height());
        if(e.keyCode == 13 && e.shiftKey) {
          App.room1.speak($('#textarea').val(), $('#username').val());
          $('#textarea').val('');
        }  
      });
    })();

    function getScrollBottom() {
      var body = window.document.body;
      var html = window.document.documentElement;
      var scrollTop = body.scrollTop || html.scrollTop;
      return html.scrollHeight - html.clientHeight - scrollTop;
    }